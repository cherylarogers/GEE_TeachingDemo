var startDate = '2023-06-01';
var endDate = '2023-06-30';

// function to apply Landsat scaling factors.
function applyScaleFactors(image) {
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);
  return image.addBands({srcImg: opticalBands, overwrite: true})
              .addBands({srcImg: thermalBands, overwrite: true});
}

function QALandsat(image) {
      var qa = image.select('QA_PIXEL');
      // QA flags are stored as a bitmask. We need to decode the information in the 16 bit binary number.
      // The operator << is the left shift operator: so 1 << 1 shifts 0000001 to 0000010.
      // This allows us to extract the bit we want to check without converting to/from binary numbers.
      // First we identify the bit we're interested in for each quality flag:
      // Note: the first bit position is bit 0
      var DilatedCloud = 1 << 1;  // 000000010 i.e. from shifting 0000001 left by 1 position
      var Cirrus = 1 << 2;        // 000000100 i.e. from shifting 0000001 left by 2 positions
      var Cloud = 1 << 3;         // 000001000
      var CloudShadow = 1 << 4;   // 000010000
      var Snow = 1 << 5;          // 000100000
      var Clear = 1 << 6;         // 001000000
      var Water = 1 << 7;         // 010000000

      // Next we test if the bit value in the QA pixel 
      // and our value defined above are set to 0 in the bit position we're interested in
      // i.e. bitwiseAnd of 1101110000 and 
      //                    001000000 is 0000000000, or equal to 0
      // whereas bitwiseAnd of  001001000 and
      //                        001000000 is 001000000, or not equal to 0
      // we test each of the bits we're interested in separately:
      
      //Two options:
      var clearPixels1 = qa.bitwiseAnd(Clear).neq(0);
      
      var clearPixels2 = 
             qa.bitwiseAnd(DilatedCloud).eq(0) 
        .and(qa.bitwiseAnd(Cirrus).eq(0))
        .and(qa.bitwiseAnd(Cloud).eq(0))
        .and(qa.bitwiseAnd(CloudShadow).eq(0))
        .and(qa.bitwiseAnd(Snow).eq(0))
        //.and(qa.bitwiseAnd(Water).eq(0)); // we can comment/uncomment each line to select what we wish to mask
        
      return image.updateMask(clearPixels2); //applies the mask to each pixel in the image
    }

var L9_BANDS = ['SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7', 'ST_B10'];
var STD_NAMES = ['blue', 'green', 'red', 'nir', 'swir1', 'swir2', 'temp'];

var Landsat9 = ee.ImageCollection('LANDSAT/LC09/C02/T1_L2') //Loads the Landsat 9 image collection
    .filterDate(startDate, endDate) //filters the image collection by date
    .map(applyScaleFactors) //applies the applyScaleFactors function to each image in the collection
    .map(QALandsat) //applies the QALandsat function to each image in the collection
    .select(L9_BANDS, STD_NAMES) //selects only the bands we want, and renames them
    .median() ; //calculates the median pixel value across the filtered, masked, collection.
    // The 'median()' is a function called a 'reducer' in earth engine that converts an image collection 
    // to a single image.

// NDVI = (NIR-RED)/(NIR+RED)
var NDVI = Landsat9.select('nir').subtract(Landsat9.select('red'))
   .divide(Landsat9.select('nir').add(Landsat9.select('red')));

// NBR = (NIR-SWIR)/(NIR+SWIR)
var NBR = Landsat9.select('nir').subtract(Landsat9.select('swir2'))
  .divide(Landsat9.select('nir').add(Landsat9.select('swir2')));

var visualizationFC = {
  bands: ['nir', 'red', 'green'],
  min: 0.0,
  max: 0.5
};

var visualizationFire = {
  bands: ['swir2', 'nir', 'red'],
  min: 0.0,
  max: 0.5
};
var visualizationTrueColor = {
  bands: ['red', 'green', 'blue'],
  min: 0.0,
  max: 0.3
};

Map.addLayer(Landsat9, visualizationFire, 'False Colour (754)');
Map.addLayer(Landsat9, visualizationFC, 'False Colour (543)');
Map.addLayer(Landsat9, visualizationTrueColor, 'True Colour (432)');
Map.addLayer(
  {eeObject: NDVI,
   visParams: {palette : ['purple','white','green'], min: -0.7, max: 0.7},
   name: 'NDVI'
  });
Map.addLayer(
  {eeObject: NBR,
    visParams: {palette : ['purple','white','green'], min: -0.7, max: 0.7},
    name: 'NBR'
  });
  

var FIRMS = ee.ImageCollection('FIRMS').filter(
    ee.Filter.date(startDate, endDate));
var fires = FIRMS.select('T21');
var firesVis = {
  min: 325.0,
  max: 400.0,
  palette: ['red', 'orange', 'yellow'],
};

Map.addLayer(fires, firesVis, 'Fires');


